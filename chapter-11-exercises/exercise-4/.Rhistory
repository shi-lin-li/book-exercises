View(jfk_flights)
jfk_flights <- sea_flights %>%
filter(origin == "JFK") %>%
summarise(
avg = mean(gain_in_air, na.rm = TRUE),
min_j = min(gain_in_air, na.rm = TRUE),
max_j = max(gain_in_air, na.rm = TRUE)
)
sea_flights <- flights %>%
select(origin, dest, gain_in_air) %>%
filter(dest == "SEA")
library(nycflights13)
library(dplyr)
# The data frame `flights` should now be accessible to you.
# Use functions to inspect it: how many rows and columns does it have?
# What are the names of the columns?
# Use `??flights` to search for documentation on the data set (for what the
# columns represent)
View(flights)
nrow(flights)
ncol(flights)
colnames(flights)
??flights
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
flights <- arrange(flights, desc(gain_in_air))
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained or lost while flying (that is: how much of the delay arriving occured
# during flight, as opposed to before departing).
flights <- mutate(flights, gain_in_air = arr_delay - dep_delay)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
flights <- arrange(flights, desc(gain_in_air))
flights <- flights %>%
mutate(gain_in_air = dep_delay + arr_delay) %>%
arrange(desc(gain_in_air))
rm(flights)
# Make a histogram of the amount of time gained using the `hist()` function
hist(flights$gain_in_air)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
avg <- mean(flights$gain_in_air, na.rm = TRUE)
flights <- flights %>%
mutate(gain_in_air = dep_delay + arr_delay) %>%
arrange(desc(gain_in_air))
# Make a histogram of the amount of time gained using the `hist()` function
hist(flights$gain_in_air)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
avg <- mean(flights$gain_in_air, na.rm = TRUE)
sea_flights <- flights %>%
select(origin, dest, gain_in_air) %>%
filter(dest == "SEA")
# On average, did flights to SeaTac gain or loose time?
mean(sea_flights$gain_in_air, na.rm = TRUE)
jfk_flights <- sea_flights %>%
filter(origin == "JFK") %>%
summarise(
avg = mean(gain_in_air, na.rm = TRUE),
min_j = min(gain_in_air, na.rm = TRUE),
max_j = max(gain_in_air, na.rm = TRUE)
)
View(jfk_flights)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
group_by(flights, dep_delay)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
flights <- group_by(flights, dep_delay)
View(flights)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
flights_dep <- group_by(flights, dep_delay)
rm(flights)
View(flights)
View(flights_dep)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
flights_by_m <- group_by(flights, month)
View(flights_dep)
View(flights_by_m)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
flights_by_m <- group_by(flights, month)
dep_delay_by_month <-
summarise(flights_by_m,
mean_by_month = mean(dep_delay)
)
View(dep_delay_by_month)
dep_delay_by_month <-
summarise(flights_by_m,
mean_by_month = mean("dep_delay")
)
dep_delay_by_month <- summarize(flights_by_m,
mean_by_month = mean(dep_delay)
)
View(dep_delay_by_month)
dep_delay_by_month <- group_by(month) %>%
summarize(flights_by_m,
mean_by_month = mean(dep_delay)
)
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(flights_by_m,
mean_by_month = mean(dep_delay)
)
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(
mean_by_month = mean(dep_delay)
)
View(dep_delay_by_month)
View(flights)
install.packages("dplyr")
install.packages("dplyr")
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(
groups,
mean_by_month = mean(dep_delay)
)
library("dplyr")
install.packages("dplyr")
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(
groups,
mean_by_month = mean(dep_delay)
)
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(
groups,
mean_by_month = mean(dep_delay)
)
View(flights)
library("dplyr")
View(flights)
install.packages("dplyr")
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
View(flights)
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(
groups,
mean_by_month = mean(dep_delay)
)
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(
mean_by_month = mean(dep_delay)
)
View(dep_delay_by_month)
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(dep_delay_by_month)
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
head(flights)
View(arr_delay_by_dest)
arr_delay_by_dest <- flights %>%
group_by(dest) %>%
summarize(
arr_delay = mean(dep_delay)
)
View(arr_delay_by_dest)
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(
delay = mean(dep_delay, na.rm = TRUE)
)
View(dep_delay_by_month)
# Which month had the greatest average departure delay?
filter(dep_delay_by_month, delay == min(delay))
# Which month had the greatest average departure delay?
filter(dep_delay_by_month, delay == max(delay))
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(dep_delay_by_month)
arr_delay_by_dest <- flights %>%
group_by(dest) %>%
summarize(
arr_delay = mean(dep_delay, na.rm = TRUE)
)
View(arr_delay_by_dest)
filter(arr_delay_by_dest, arr_delay == max(arr_delay))
as.data.frame(filter(arr_delay_by_dest, arr_delay == max(arr_delay)))
# You can look up these airports in the `airports` data frame!
View(airports)
mutate(flights, speed = distance / (hour+minutes/60))
mutate(flights, speed = distance / (hour+minute/60))
flights <- mutate(flights, speed = distance / (hour+minute/60))
flights <- mutate(flights, speed = distance / (hour+minute/60))
View(flights)
filter(flights, speed = max(speed))
filter(flights, speed == max(speed))
# Which month had the greatest average departure delay?
filter(dep_delay_by_month, delay == max(delay))
filter(flights, speed == max(speed))
filter(flights, speed == max(speed)) %>%
select(flights, dest)
filter(flights, speed == max(speed)) %>%
select(dest)
filter(flights, speed == max(speed)) %>%
select(dest)
filter(flights, speed == max(speed)) %>%
select(dest)
filter(flights, speed == max(speed)) %>%
select(dest)
filter(flights, speed == max(speed)) %>%
select(dest)
library("dplyr")
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
group_by(flights, dest)
avg_arr_delay <- flight %>%
group_by(dest)
summarize(
arr_delay = mean(arr_delay)
)
avg_arr_delay <- flights %>%
group_by(dest)
summarize(
arr_delay = mean(arr_delay)
)
avg_arr_delay <- flights %>%
group_by(dest) %>%
summarize(
arr_delay = mean(arr_delay)
)
View(avg_arr_delay)
avg_arr_delay <- flights %>%
group_by(dest) %>%
summarize(
arr_delay = mean(arr_delay, na.rm = TRUE)
)
View(avg_arr_delay)
?airports
View(flights)
# Create a dataframe of the average arrival delay for each _airline_, then use
# `left_join()` to join on the "airlines" dataframe
# Which airline had the smallest average arrival delay?
View(airlines)
left_join(avg_arr_delay, airports, by = c("dest"="faa")
left_join(avg_arr_delay, airports, by = c("dest"="faa"))
b_port <- left_join(avg_arr_delay, airports, by = c("dest"="faa"))
View(b_port)
largest_port <- filter(b_port, arr_delay)
filter(b_port, arr_delay == max(arr_delay))
filter(b_port, arr_delay == max(arr_delay))
filter(b_port, arr_delay == 4.38188976)
arr_delay_by_dest_new <- mutate(arr_delay_by_dest, carrier = flights$carrier)
