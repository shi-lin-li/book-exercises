View(salaries)
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", 1:100)
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salary_2017 <- runif(100, 40000, 50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salary_adjustments <- runif(100, -5000, 10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salary_2017, salary_adjustments, stringsAsFactors = FALSE)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salary_2018 <- salaries$salary_2017 + salaries$salary_adjustments
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raise <- salaries$salary_adjustments < 0
View(salaries)
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raise <- salaries$salary_adjustments > 0
View(salaries)
# What was the largest decrease in salaries between the two years?
salaries[salaries$salary_adjustments == min(salaries$salary_adjustments) , "employees"]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salary_adjustments == max(salaries$salary_adjustments) , "employees"]
# What was the average salary change?
mean(salaries[["salary_adjustment"]])
)
# What was the average salary change?
mean(salaries$salary_adjustment)
# For people who did not get a raise, how much money did they lose on average?
mean(salaries[salaries$got_raise == FALSE, ])
# For people who did not get a raise, how much money did they lose on average?
mean(salaries[salaries$got_raise == FALSE, salary_adjustments])
# For people who did not get a raise, how much money did they lose on average?
mean(salaries[salaries$got_raise == FALSE, ]$salary_adjustments)
setwd("~/Desktop/INFO201/book-exercises/chapter-10-exercises/exercise-2")
# Write a .csv file of your salary data to your working directory
write.csv("salaries")
# Write a .csv file of your salary data to your working directory
write.csv(data(salaries))
# Write a .csv file of your salary data to your working directory
write.csv(salaries, file = "salaries.csv")
setwd("~/Desktop/INFO201/book-exercises/chapter-10-exercises/exercise-4")
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grant <- read.csv(file = 'data/gates_money.csv', header = TRUE, stringsAsFactors = FALSE)
View(grant)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- grant$organization
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
# What was the mean grant value?
mean(grant$total_amount)
# What was the dollar amount of the largest grant?
max(grant$total_amount)
# Which organization received the largest grant?
grant[grant$total_amount == max(grant$total_amount), "organization")
# Which organization received the largest grant?
grant[grant$total_amount == max(grant$total_amount), "organization"]
# Which organization received the smallest grant?
grant[grant$total_amount == min(grant$total_amount), "organization"]
# How many grants were awarded in 2010?
nrow
# How many employees got a raise?
nrow(salaries[salaries$got_raise == TRUE])
# How many employees got a raise?
nrow(salaries[salaries$got_raise == TRUE, ])
# How many grants were awarded in 2010?
nrow(grant[started_year == 2018, ] )
# How many grants were awarded in 2010?
nrow(grant[start_year == 2018, ] )
# How many grants were awarded in 2010?
nrow(grant[grant$start_year == 2018, ] )
# How many grants were awarded in 2010?
nrow(grant[grant$start_year == 2010 , ] )
# How many grants were awarded in 2010?
nrow(grant[grant$start_year == 2010, ] )
